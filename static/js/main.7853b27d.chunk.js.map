{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","console","log","axios","get","res","this","data","value","children","Component","Consumer","Contact","onShowClick","name","e","showContactInfo","onDeleteClick","a","delete","email","phone","style","cursor","onClick","bind","float","color","marginRight","Contacts","deleteContact","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","match","params","updContact","put","Test","title","body","fetch","then","response","json","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7853b27d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add Contact\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\n// const headingStyle = {\r\n//     color:'green',\r\n//     fontSize:'50px'\r\n// }\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [\r\n          ...state.contacts.map((contact) =>\r\n            contact.id === action.payload.id ? action.payload : contact\r\n          ),\r\n        ],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n\r\n  // async-await version\r\n  async componentDidMount() {\r\n    console.log(\"context > componentDidMount\");\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   console.log(\"context > componentDidMount\");\r\n\r\n  //   axios\r\n  //     .get(\"https://jsonplaceholder.typicode.com/users\")\r\n  //     .then((res) => this.setState({ contacts: res.data }));\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import \"./contact.css\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showContactInfo: true,\r\n    };\r\n  }\r\n\r\n  // Tip: No need to do binding for this function if it's an arrow function\r\n  onShowClick = (id, name, e) => {\r\n    console.log(id + \" > \" + name);\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo,\r\n    });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    console.log(\"Contact > onDeleteClick\");\r\n\r\n    const res = await axios.delete(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    dispatch({\r\n      type: \"DELETE_CONTACT\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const showContactInfo = this.state.showContactInfo;\r\n    // const { name, email, phone } = this.props;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  className={\r\n                    showContactInfo ? \"fas fa-caret-down\" : \"fas fa-caret-up\"\r\n                  }\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={this.onShowClick.bind(this, id, name)}\r\n                />\r\n                <i\r\n                  className=\"fas fa-trash\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-edit\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  deleteContact = (id) => {\r\n    console.log(\"deleteContact \" + id);\r\n    // this.setState({\r\n    //   contacts: this.state.contacts.filter((contact) => contact.id != id),\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const contacts = value.contacts;\r\n          return (\r\n            <>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  // deleteClickHandler={this.deleteContact}\r\n                />\r\n              ))}\r\n            </>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  // function parameters\r\n  name,\r\n  label,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-md\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"Default Name\",\r\n    email: \"2@as.com\",\r\n    phone: \"3\",\r\n    errors: {},\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      // note: spread state (...) below is actually redundant. setState will\r\n      // include the existing state, then merge in whatever you try to set in\r\n      // setState.\r\n\r\n      ...this.state,\r\n      // use square brackets [] to use the input field's \"name\" property\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //validation check\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: { name: \"Name is required\" },\r\n      });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: { email: \"Email is required\" },\r\n      });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: { phone: \"Phone is required\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      // id: uuid(),\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    console.log(this.state);\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({\r\n      type: \"ADD_CONTACT\",\r\n      payload: res.data,\r\n    });\r\n\r\n    // dispatch({\r\n    //   type: \"ADD_CONTACT\",\r\n    //   payload: newContact,\r\n    // });\r\n\r\n    // clear fields\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    // switch to homepage after adding a Contact\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    name=\"name\"\r\n                    label=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter name..\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email..\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"phone\"\r\n                    label=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter phone..\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    // id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    console.log(\"EditContact > componentDidMount\");\r\n    const id = this.props.match.params.id;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const { name, email, phone } = res.data;\r\n    this.setState({ name, email, phone });\r\n\r\n    console.log(this.state);\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      // note: spread state (...) below is actually redundant. setState will\r\n      // include the existing state, then merge in whatever you try to set in\r\n      // setState.\r\n\r\n      ...this.state,\r\n      // use square brackets [] to use the input field's \"name\" property\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //validation check\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: { name: \"Name is required\" },\r\n      });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: { email: \"Email is required\" },\r\n      });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: { phone: \"Phone is required\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const id = this.props.match.params.id;\r\n    const updContact = { name, email, phone };\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({\r\n      type: \"UPDATE_CONTACT\",\r\n      payload: res.data,\r\n    });\r\n\r\n    // clear fields\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    // switch to homepage after adding a Contact\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    name=\"name\"\r\n                    label=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter name..\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email..\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"phone\"\r\n                    label=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter phone..\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-Secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, this page does not exist</p>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  // constructor() {\r\n  //   super();\r\n  // }\r\n\r\n  state = {\r\n    title: \"\",\r\n    body: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount..\");\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then((response) => response.json())\r\n      .then((json) =>\r\n        this.setState({\r\n          title: json.title,\r\n          body: json.body,\r\n        })\r\n      );\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   console.log(\"componentWillMount...\");\r\n  // }\r\n\r\n  // componentDidUpdate() {\r\n  //   console.log(\"componentDidUpdate...\");\r\n  // }\r\n  // componentWillReceiveProps(nextProps, nextState) {\r\n  //   console.log(\"componentWillReceiveProps..\");\r\n  // }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <>\r\n        <h1>Title: {title}</h1>\r\n        <p>Body: {body}</p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n//import \"./App.css\";\n// import { render } from \"@testing-library/react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n              {/* <AddContact />\n              <Contacts /> */}\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}